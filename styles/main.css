@charset "UTF-8";
/**
  Нормализация блочной модели
 */
*,
::before,
::after {
  box-sizing: border-box;
}

/**
  Убираем внутренние отступы слева тегам списков,
  у которых есть атрибут class
 */
:where(ul, ol):where([class]) {
  padding-left: 0;
}

/**
  Убираем внешние отступы body и двум другим тегам,
  у которых есть атрибут class
 */
body,
:where(blockquote, figure):where([class]) {
  margin: 0;
}

/**
  Убираем внешние отступы вертикали нужным тегам,
  у которых есть атрибут class
 */
:where(h1,
h2,
h3,
h4,
h5,
h6,
p,
ul,
ol,
dl):where([class]) {
  margin-block: 0;
}

:where(dd[class]) {
  margin-left: 0;
}

:where(fieldset[class]) {
  margin-left: 0;
  padding: 0;
  border: none;
}

/**
  Убираем стандартный маркер маркированному списку,
  у которого есть атрибут class
 */
:where(ul[class]) {
  list-style: none;
}

:where(address[class]) {
  font-style: normal;
}

/**
  Обнуляем вертикальные внешние отступы параграфа,
  объявляем локальную переменную для внешнего отступа вниз,
  чтобы избежать взаимодействие с более сложным селектором
 */
p {
  --paragraphMarginBottom: 24px;
  margin-block: 0;
}

/**
  Внешний отступ вниз для параграфа без атрибута class,
  который расположен не последним среди своих соседних элементов
 */
p:where(:not([class]):not(:last-child)) {
  margin-bottom: var(--paragraphMarginBottom);
}

/**
  Упрощаем работу с изображениями
 */
img {
  display: block;
}

/**
  Наследуем свойства шрифт для полей ввода
 */
input,
textarea,
select,
button {
  font: inherit;
}

button {
  cursor: pointer;
}

html {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  height: 100%;
}

/**
  Плавный скролл
 */
html,
:has(:target) {
  scroll-behavior: smooth;
}

body {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  min-height: 100%;
  /**
    Унифицированный интерлиньяж
   */
  line-height: 1.5;
}

/**
  Приводим к единому цвету svg-элементы
 */
svg *[fill] {
  fill: currentColor;
}

svg *[stroke] {
  stroke: currentColor;
}

/**
  Чиним баг задержки смены цвета при взаимодействии с svg-элементами
 */
svg * {
  transition-property: fill, stroke;
}

/**
  Удаляем все анимации и переходы для людей,
  которые предпочитают их не использовать
 */
@media (prefers-reduced-motion: reduce) {
  *,
  ::before,
  ::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
@font-face {
  font-family: "Montserrat";
  src: url("../fonts/Montserrat-Regular.woff2") format("woff2");
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Montserrat";
  src: url("../fonts/Montserrat-Medium.woff2") format("woff2");
  font-weight: 500;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Montserrat";
  src: url("../fonts/Montserrat-SemiBold.woff2") format("woff2");
  font-weight: 600;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Montserrat";
  src: url("../fonts/Montserrat-Bold.woff2") format("woff2");
  font-weight: 700;
  font-style: normal;
  font-display: swap;
}
:root {
  --color-light: #FFFFFF;
  --color-dark: #444444;
  --color-dark-light: #454343;
  --color-gray: #89817F;
  --color-gray-light: #A69895;
  --color-border: #B2B2B2;
  --color-border-card: #DEDEDE;
  --color-yellow: #F9CE1E;
  --color-green-dark: #043E44;
  --color-red: #ff3E44;
  --color-accent: #429F3A;
  --container-width: 90rem;
  --container-padding-x: 11.6875rem;
  --border: 1px solid var(--color-border);
  --border-light: 1px solid #b2b2b270;
  --border-radius-btn: 0.3125rem;
  --border-radius-smaller: 0.5rem;
  --border-radius: 0.625rem;
  --font-family-base: "Montserrat", system-ui, sans-serif;
  --transition-duration: .2s;
}
@media (width <= 66.68625rem) {
  :root {
    --container-padding-x: 5rem;
  }
}
@media (width <= 47.99875rem) {
  :root {
    --container-padding-x: 1.25rem;
  }
}

.container {
  max-width: calc(var(--container-width) + var(--container-padding-x) * 2);
  margin-inline: auto;
  padding-inline: var(--container-padding-x);
}

.visually-hidden {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  margin: -1px !important;
  border: 0 !important;
  padding: 0 !important;
  white-space: nowrap !important;
  clip-path: inset(100%) !important;
  clip: rect(0 0 0 0) !important;
  overflow: hidden !important;
}

@media (width <= 47.99875rem) {
  .hidden-mobile {
    display: none !important;
  }
}

@media (width > 47.99875rem) {
  .visible-mobile {
    display: none !important;
  }
}

body {
  display: flex;
  flex-direction: column;
  font-family: var(--font-family-base);
  font-size: 0.875rem;
  font-weight: 400;
  color: var(--color-dark);
}

main {
  flex-grow: 1;
}

h2, .h2 {
  font-size: clamp(1.125rem, 0.9893270622rem + 0.5788712012vw, 1.375rem);
  font-weight: 500;
}

h3, .h3 {
  font-size: clamp(0.9375rem, 0.9035817656rem + 0.1447178003vw, 1rem);
  font-weight: 500;
}
@media (width <= 47.99875rem) {
  h3, .h3 {
    font-weight: 600;
  }
}

a,
button,
label,
input,
textarea,
select,
svg * {
  transition-duration: var(--transition-duration);
}

a {
  color: inherit;
}
@media (any-hover: hover) {
  a:hover {
    color: var(--color-accent);
  }
}
@media (any-hover: none) {
  a:active {
    color: var(--color-accent);
  }
}
a[class] {
  text-decoration: none;
}

:focus-visible {
  outline: 0.125rem dashed var(--color-dark);
  outline-offset: 0.25rem;
  transition-duration: 0s !important;
}

b {
  font-weight: 500;
}

.button {
  display: inline-flex;
  justify-content: center;
  align-items: center;
  min-width: 10rem;
  height: 2.25rem;
  background-color: transparent;
  color: var(--color-accent);
  border: var(--border);
  border-radius: var(--border-radius-btn);
}
.button--fill {
  background-color: var(--color-accent);
  color: var(--color-light);
  border-color: var(--color-accent);
}
@media (any-hover: hover) {
  .button--fill:hover {
    background-color: transparent;
    color: var(--color-accent);
  }
}
@media (any-hover: none) {
  .button--fill:active {
    background-color: transparent;
    color: var(--color-accent);
  }
}

.link {
  display: flex;
  justify-content: center;
  width: 100%;
  padding-block: 0.625rem;
  border: 1px solid var(--color-dark);
  border-radius: var(--border-radius-btn);
}
@media (any-hover: hover) {
  .link:hover {
    border: 1px solid var(--color-accent);
    background-color: var(--color-accent);
    color: var(--color-light);
  }
}
@media (any-hover: none) {
  .link:active {
    border: 1px solid var(--color-accent);
    background-color: var(--color-accent);
    color: var(--color-light);
  }
}
@media (width <= 47.99875rem) {
  .link {
    color: var(--color-green-dark);
    border: 1px solid var(--color-green-dark);
  }
}

@media (width <= 47.99875rem) {
  .tabs__header {
    overflow-x: auto;
  }
}
.tabs__buttons {
  --padding-block: 1.25rem;
  display: flex;
  justify-content: center;
  align-items: center;
  column-gap: 1.25rem;
  padding-block: var(--padding-block);
  border-bottom: var(--border);
}
@media (width <= 23.49875rem) {
  .tabs__buttons {
    --padding-block: 0.4375rem;
    width: max-content;
    margin-inline: auto;
  }
}
.tabs__button {
  font-size: clamp(0.9375rem, 0.9035817656rem + 0.1447178003vw, 1rem);
  position: relative;
  font-weight: 500;
  background-color: transparent;
  color: var(--color-dark);
  border: none;
  cursor: pointer;
}
@media (any-hover: hover) {
  .tabs__button:hover {
    color: var(--color-accent);
  }
}
@media (any-hover: none) {
  .tabs__button:active {
    color: var(--color-accent);
  }
}
.tabs__button.is-active {
  font-weight: 600;
  pointer-events: none;
}
@media (width <= 47.99875rem) {
  .tabs__button.is-active {
    font-weight: 700;
  }
}
.tabs__button.is-active::after {
  content: "";
  position: absolute;
  top: calc(100% + var(--padding-block) - 0.3125rem);
  left: 0;
  width: 100%;
  height: 0.3125rem;
  background-color: var(--color-accent);
  border-radius: 0.3125rem;
  transition-duration: var(--transition-duration);
}
.tabs__content:not(.is-active) {
  display: none;
}
.tabs__content:focus-visible {
  outline-offset: -1rem;
}

.grid {
  display: grid;
  gap: 1.875rem 6.25rem;
}
@media (width > 47.99875rem) {
  .grid {
    grid-template-columns: repeat(2, 1fr);
  }
}

.about-product {
  display: flex;
  flex-direction: column;
  row-gap: 3.125rem;
  margin-block: 3.125rem;
}
@media (width <= 47.99875rem) {
  .about-product {
    row-gap: 1.875rem;
    margin-top: 1.5rem;
  }
}

.description p:not(:last-child) {
  margin-bottom: 1.875rem;
}
@media (width > 47.99875rem) {
  .description__contents {
    display: contents;
  }
}

.info__inner {
  display: grid;
  row-gap: 1.25rem;
}
@media (width <= 47.99875rem) {
  .info__inner {
    row-gap: 0.9375rem;
  }
}
.info__list {
  display: grid;
  row-gap: 0.9375rem;
}
@media (width > 47.99875rem) {
  .info__list {
    font-size: 0.75rem;
  }
}
@media (width <= 47.99875rem) {
  .info__list {
    row-gap: 0.75rem;
  }
}
.info__item {
  display: flex;
  justify-content: space-between;
  align-items: center;
  border-bottom: var(--border-light);
}

.cards {
  display: grid;
  row-gap: 1.875rem;
}
@media (width <= 47.99875rem) {
  .cards {
    row-gap: 2.5rem;
  }
}
.cards__list {
  display: flex;
  column-gap: 1.375rem;
  overflow-x: auto;
}
@media (width <= 47.99875rem) {
  .cards__list {
    column-gap: 1rem;
  }
}

.card-product {
  position: relative;
  border: 1px solid var(--color-border-card);
  border-radius: var(--border-radius);
}
@media (width <= 47.99875rem) {
  .card-product {
    display: flex;
    padding: 1.75rem 1.3125rem 1.3125rem 0.125rem;
  }
}
.card-product__image {
  width: 15.5rem;
  height: auto;
}
@media (width <= 47.99875rem) {
  .card-product__image {
    width: 6.25rem;
    height: 5.875rem;
    border-radius: var(--border-radius-smaller);
  }
}
.card-product__name {
  display: grid;
  padding: 0.875rem 0 0 0.75rem;
  row-gap: 0.4375rem;
}
@media (width <= 47.99875rem) {
  .card-product__name {
    padding: 0 0 0 0.25rem;
  }
}
.card-product__title {
  font-weight: 600;
}
@media (width <= 47.99875rem) {
  .card-product__title {
    font-size: 0.9375rem;
  }
}
.card-product__owner {
  color: var(--color-gray);
}
.card-product__price {
  font-size: clamp(1.125rem, 1.0571635311rem + 0.2894356006vw, 1.25rem);
  position: relative;
  display: flex;
  align-items: end;
  padding: 0.9375rem 0.8125rem;
  font-weight: 600;
  line-height: 0.9;
}
@media (width <= 47.99875rem) {
  .card-product__price {
    justify-content: end;
    padding-inline: 0;
    font-weight: 700;
  }
}
.card-product__price span {
  font-size: clamp(0.8125rem, 0.8464182344rem + -0.1447178003vw, 0.75rem);
  color: var(--color-gray-light);
  font-weight: 400;
}
@media (width <= 47.99875rem) {
  .card-product__price span {
    color: #4d4b4b;
    font-weight: 500;
  }
}
.card-product__button-svg {
  position: absolute;
  top: 50%;
  right: 0;
  transform: translateY(-50%);
  background-color: var(--color-accent);
  border: 1px solid var(--color-accent);
  border-radius: 3.75rem 0 0 3.75rem;
  color: var(--color-light);
  padding: 0.375rem 1.3125rem;
}
@media (any-hover: hover) {
  .card-product__button-svg:hover {
    background-color: transparent;
    color: var(--color-accent);
  }
}
@media (any-hover: none) {
  .card-product__button-svg:active {
    background-color: transparent;
    color: var(--color-accent);
  }
}
.card-product__button {
  height: 2.875rem;
}
@media (any-hover: hover) {
  .card-product__button:hover {
    border-color: var(--color-accent);
    background-color: var(--color-accent);
    color: var(--color-light);
  }
}
@media (any-hover: none) {
  .card-product__button:active {
    border-color: var(--color-accent);
    background-color: var(--color-accent);
    color: var(--color-light);
  }
}
.card-product__button svg:first-child {
  margin-left: 1.1875rem;
}
.card-product__button svg:not(:last-child) {
  margin-right: 0.25rem;
}
@media (width > 47.99875rem) {
  .card-product__contents {
    display: contents;
  }
}
.card-product__like {
  position: absolute;
  top: 0.9375rem;
  right: 0.9375rem;
  color: var(--color-light);
  cursor: pointer;
  transition-duration: var(--transition-duration);
}
@media (any-hover: hover) {
  .card-product__like:hover {
    color: var(--color-red);
  }
  .card-product__like:hover svg {
    fill: var(--color-red);
  }
}
@media (any-hover: none) {
  .card-product__like:active {
    color: var(--color-red);
  }
  .card-product__like:active svg {
    fill: var(--color-red);
  }
}

.rating-view {
  display: inline-flex;
  column-gap: 0.1875rem;
  padding: 0 0 1.125rem 0.6875rem;
}
.rating-view__star {
  --size: 0.9375rem;
  width: var(--size);
  height: var(--size);
  background: url("/icons/star_gray.svg") center/contain no-repeat;
}
.rating-view__star.is-active {
  background: url("/icons/star.svg") center/contain no-repeat;
}

.reviews {
  display: flex;
  flex-direction: column;
  align-items: start;
  row-gap: 2.0625rem;
  margin-block: 3.125rem;
}
@media (width <= 47.99875rem) {
  .reviews {
    row-gap: 1.875rem;
    margin-top: 1.5rem;
    align-items: center;
  }
}
.reviews__description {
  max-width: 32.6875rem;
}

.where-product {
  display: flex;
  column-gap: 11.1875rem;
  margin-block: 3.125rem;
}
@media (width <= 90.06125rem) {
  .where-product {
    column-gap: 4.375rem;
  }
}
@media (width <= 66.68625rem) {
  .where-product {
    column-gap: 1.25rem;
  }
}
@media (width <= 47.99875rem) {
  .where-product {
    flex-direction: column;
    margin-top: 1.5rem;
  }
}
.where-product__link-actions {
  display: flex;
  column-gap: 0.5rem;
}
.where-product__inner {
  display: grid;
  row-gap: 1.5625rem;
  margin-top: 1.0625rem;
}
@media (width <= 47.99875rem) {
  .where-product__inner {
    justify-content: center;
  }
}
@media (width <= 47.99875rem) {
  .where-product__image {
    width: 21rem;
    height: 18.4375rem;
  }
}

/*# sourceMappingURL=main.css.map */
